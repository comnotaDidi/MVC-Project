<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>üìö –£—Ä–æ–∫–∏ | Tracker</title>

  <!-- Bootstrap -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />

  <!-- Google Font -->
  <link href="https://fonts.googleapis.com/css2?family=Rubik:wght@400;600&display=swap" rel="stylesheet" />

  <style>
    body {
      font-family: 'Rubik', sans-serif;
      background: linear-gradient(135deg, #0f0f13, #1f1f2b);
      color: #f1f1f1;
      padding: 40px 0;
      min-height: 100vh;
      overflow-x: hidden;
    }

    h1 {
      font-weight: 700;
      font-size: 2.7rem;
      text-align: center;
      margin-bottom: 40px;
      background: linear-gradient(90deg, #6c5ce7, #00cec9);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }

    /* –ù–∞–≤–∏–≥–∞—Ü–∏—è */
    .nav-tabs {
      justify-content: center;
      border-bottom: none;
      margin-bottom: 3rem;
    }

    .nav-tabs .nav-link {
      background: transparent;
      color: #aaa;
      border: none;
      border-bottom: 3px solid transparent;
      border-radius: 0;
      font-size: 1.1rem;
      font-weight: 600;
      transition: 0.3s;
      padding: 0.75rem 2rem;
    }

    .nav-tabs .nav-link.active {
      color: #00cec9;
      border-bottom-color: #00cec9;
    }

    .container {
      max-width: 700px;
      margin: 0 auto;
    }

    /* –ö–∞—Ä—Ç–æ—á–∫–∞ —É—Ä–æ–∫–∞ */
    .card-lesson {
      background: #1e1f26;
      border-radius: 18px;
      padding: 20px 24px;
      margin-bottom: 1rem;
      border: 1px solid rgba(255, 255, 255, 0.05);
      box-shadow: 0 0 10px rgba(0, 204, 255, 0.08);
      display: flex;
      justify-content: space-between;
      align-items: center;
      transition: 0.4s ease;
    }

    .card-lesson:hover {
      transform: translateY(-3px);
      box-shadow: 0 0 20px rgba(0, 204, 255, 0.2);
    }

    .lesson-desc {
      flex-grow: 1;
      font-weight: 500;
      font-size: 1.1rem;
      user-select: none;
      color: #f1f1f1;
    }

    .lesson-desc.completed {
      opacity: 0.6;
      text-decoration: line-through;
    }

    /* –ö–Ω–æ–ø–∫–∏ */
    .btn-lesson {
      background: linear-gradient(90deg, #6c5ce7, #00cec9);
      border: none;
      padding: 6px 14px;
      border-radius: 12px;
      color: white;
      font-weight: 600;
      font-size: 1rem;
      margin-left: 10px;
      cursor: pointer;
      box-shadow: 0 0 12px rgba(108, 92, 231, 0.5);
      transition: background 0.3s ease;
      user-select: none;
    }

    .btn-lesson:hover {
      background: linear-gradient(90deg, #00cec9, #6c5ce7);
    }

    .btn-complete {
      background: transparent;
      border: none;
      font-size: 1.2rem;
      color: #00cec9;
      cursor: pointer;
      user-select: none;
      margin-right: 10px;
    }

    .btn-complete.completed {
      color: #6c5ce7;
    }

    .btn-edit {
      background: #ffc107;
      border: none;
      border-radius: 12px;
      color: black;
      font-weight: 600;
      padding: 6px 12px;
      margin-left: 10px;
      cursor: pointer;
      user-select: none;
      transition: background 0.3s ease;
    }

    .btn-edit:hover {
      background: #e0a800;
    }

    .btn-delete {
      background: #dc3545;
      border: none;
      border-radius: 12px;
      color: white;
      font-weight: 600;
      padding: 6px 12px;
      margin-left: 10px;
      cursor: pointer;
      user-select: none;
      transition: background 0.3s ease;
    }

    .btn-delete:hover {
      background: #bb2d3b;
    }

    /* –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */
    #lessonForm {
      display: flex;
      gap: 15px;
      margin-bottom: 30px;
    }

    #lessonDesc {
      flex-grow: 1;
      background-color: #1d1d25;
      border: 1px solid #444;
      border-radius: 40px;
      color: #f1f1f1;
      padding: 14px 20px;
      font-size: 1.1rem;
      outline-offset: 3px;
      transition: border-color 0.3s ease;
    }

    #lessonDesc:focus {
      border-color: #00cec9;
      box-shadow: 0 0 8px #00cec9;
      background-color: #252533;
    }

    #lessonForm button {
      background: linear-gradient(90deg, #00cec9, #6c5ce7);
      border: none;
      padding: 14px 30px;
      border-radius: 40px;
      color: white;
      font-weight: 600;
      font-size: 1.1rem;
      box-shadow: 0 0 14px rgba(0, 206, 201, 0.4);
      cursor: pointer;
      transition: transform 0.2s ease;
    }

    #lessonForm button:hover {
      transform: scale(1.05);
    }

    /* –ü—Ä–æ–≥—Ä–µ—Å—Å */
    .progress {
      height: 22px;
      background-color: #121218;
      border-radius: 30px;
      overflow: hidden;
      margin-bottom: 15px;
      box-shadow: inset 0 0 5px #00cec9;
    }

    .progress-bar {
      background: linear-gradient(90deg, #6c5ce7, #00cec9);
    }

    #progressText {
      text-align: right;
      font-weight: 600;
      margin-bottom: 30px;
      color: #00cec9;
    }

    /* –°—Å—ã–ª–∫–∞ –Ω–∞–∑–∞–¥ */
    .back-link {
      display: block;
      text-align: center;
      margin-top: 40px;
      font-weight: 600;
      color: #00cec9;
      text-decoration: underline;
      cursor: pointer;
      user-select: none;
      font-size: 1.1rem;
      transition: color 0.3s ease;
    }

    .back-link:hover {
      color: #6c5ce7;
    }
  </style>
</head>
<body>

  <div class="container">
    <h1>–°–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤</h1>

    <ul class="nav nav-tabs">
      <li class="nav-item">
        <a class="nav-link" href="/">–ü—Ä–µ–¥–º–µ—Ç—ã</a>
      </li>
      <li class="nav-item">
        <a class="nav-link active" href="#">–£—Ä–æ–∫–∏</a>
      </li>
    </ul>

    <form id="lessonForm" autocomplete="off">
      <input id="lessonDesc" type="text" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–∞" required />
      <button type="submit">–î–æ–±–∞–≤–∏—Ç—å</button>
    </form>

    <div class="progress">
      <div id="progressBar" class="progress-bar" style="width: 0%;"></div>
    </div>
    <div id="progressText">–ü—Ä–æ–≥—Ä–µ—Å—Å: 0%</div>

    <div id="lessonsList">
      <!-- –£—Ä–æ–∫–∏ –±—É–¥—É—Ç —Ç—É—Ç -->
    </div>

    <a href="#" class="back-link" id="backLink">‚Üê –ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
  </div>

  <script>
    const lessonForm = document.getElementById('lessonForm');
    const lessonDescInput = document.getElementById('lessonDesc');
    const lessonsList = document.getElementById('lessonsList');
    const progressBar = document.getElementById('progressBar');
    const progressText = document.getElementById('progressText');
    const backLink = document.getElementById('backLink');

    let lessons = JSON.parse(localStorage.getItem('lessons')) || [];

    function saveLessons() {
      localStorage.setItem('lessons', JSON.stringify(lessons));
    }

    function updateProgress() {
      const total = lessons.length;
      const completed = lessons.filter(l => l.completed).length;
      const percent = total === 0 ? 0 : Math.round((completed / total) * 100);
      progressBar.style.width = percent + '%';
      progressText.textContent = `–ü—Ä–æ–≥—Ä–µ—Å—Å: ${percent}%`;
    }

    function renderLessons() {
      lessonsList.innerHTML = '';
      lessons.forEach((lesson, index) => {
        const div = document.createElement('div');
        div.className = 'card-lesson';

        // –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        const btnComplete = document.createElement('button');
        btnComplete.className = 'btn-complete' + (lesson.completed ? ' completed' : '');
        btnComplete.textContent = lesson.completed ? '‚úî' : '‚óã';
        btnComplete.title = lesson.completed ? '–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–π' : '–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–π';
        btnComplete.onclick = () => {
          lessons[index].completed = !lessons[index].completed;
          saveLessons();
          renderLessons();
          updateProgress();
        };

        // –û–ø–∏—Å–∞–Ω–∏–µ
        const desc = document.createElement('div');
        desc.className = 'lesson-desc' + (lesson.completed ? ' completed' : '');
        desc.textContent = lesson.desc;

        // –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        const btnEdit = document.createElement('button');
        btnEdit.className = 'btn-edit';
        btnEdit.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å';
        btnEdit.onclick = () => {
          const newDesc = prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–∞:', lesson.desc);
          if (newDesc !== null && newDesc.trim() !== '') {
            lessons[index].desc = newDesc.trim();
            saveLessons();
            renderLessons();
          }
        };

        // –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
        const btnDelete = document.createElement('button');
        btnDelete.className = 'btn-delete';
        btnDelete.textContent = '–£–¥–∞–ª–∏—Ç—å';
        btnDelete.onclick = () => {
          if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —É—Ä–æ–∫?')) {
            lessons.splice(index, 1);
            saveLessons();
            renderLessons();
            updateProgress();
          }
        };

        div.appendChild(btnComplete);
        div.appendChild(desc);
        div.appendChild(btnEdit);
        div.appendChild(btnDelete);

        lessonsList.appendChild(div);
      });

      updateProgress();
    }

    lessonForm.onsubmit = e => {
      e.preventDefault();
      const desc = lessonDescInput.value.trim();
      if (desc) {
        lessons.push({ desc, completed: false });
        saveLessons();
        lessonDescInput.value = '';
        renderLessons();
        updateProgress();
      }
    };

    backLink.onclick = e => {
      e.preventDefault();
      // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (–∏–ª–∏ –≥–ª–∞–≤–Ω—É—é)
      location.href = '/subjects'; // <- –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –ø—É—Ç—å
    };

    renderLessons();
  </script>
</body>
</html>
